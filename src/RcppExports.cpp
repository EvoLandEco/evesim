// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Ltable_phylo
Rcpp::List Ltable_phylo(const Rcpp::NumericMatrix& LR, bool drop_extinct, Rcpp::Nullable<double> age);
RcppExport SEXP _evetiny_Ltable_phylo(SEXP LRSEXP, SEXP drop_extinctSEXP, SEXP ageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type LR(LRSEXP);
    Rcpp::traits::input_parameter< bool >::type drop_extinct(drop_extinctSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type age(ageSEXP);
    rcpp_result_gen = Rcpp::wrap(Ltable_phylo(LR, drop_extinct, age));
    return rcpp_result_gen;
END_RCPP
}
// Ltable_prune
Rcpp::NumericMatrix Ltable_prune(Rcpp::NumericMatrix LR, Rcpp::Nullable<double> age);
RcppExport SEXP _evetiny_Ltable_prune(SEXP LRSEXP, SEXP ageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type LR(LRSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type age(ageSEXP);
    rcpp_result_gen = Rcpp::wrap(Ltable_prune(LR, age));
    return rcpp_result_gen;
END_RCPP
}
// Ltable_legacy_ascending
Rcpp::NumericMatrix Ltable_legacy_ascending(Rcpp::NumericMatrix LR, Rcpp::Nullable<double> age);
RcppExport SEXP _evetiny_Ltable_legacy_ascending(SEXP LRSEXP, SEXP ageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type LR(LRSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type age(ageSEXP);
    rcpp_result_gen = Rcpp::wrap(Ltable_legacy_ascending(LR, age));
    return rcpp_result_gen;
END_RCPP
}
// Ltable_legacy_descending
Rcpp::NumericMatrix Ltable_legacy_descending(Rcpp::NumericMatrix LR, Rcpp::Nullable<double> age);
RcppExport SEXP _evetiny_Ltable_legacy_descending(SEXP LRSEXP, SEXP ageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type LR(LRSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type age(ageSEXP);
    rcpp_result_gen = Rcpp::wrap(Ltable_legacy_descending(LR, age));
    return rcpp_result_gen;
END_RCPP
}
// Ltable_cophenetic
Rcpp::NumericMatrix Ltable_cophenetic(Rcpp::NumericMatrix LR, bool drop_extinct, Rcpp::Nullable<double> age);
RcppExport SEXP _evetiny_Ltable_cophenetic(SEXP LRSEXP, SEXP drop_extinctSEXP, SEXP ageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type LR(LRSEXP);
    Rcpp::traits::input_parameter< bool >::type drop_extinct(drop_extinctSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type age(ageSEXP);
    rcpp_result_gen = Rcpp::wrap(Ltable_cophenetic(LR, drop_extinct, age));
    return rcpp_result_gen;
END_RCPP
}
// Ltable_ed
Rcpp::NumericVector Ltable_ed(Rcpp::NumericMatrix LR, bool drop_extinct, Rcpp::Nullable<double> age);
RcppExport SEXP _evetiny_Ltable_ed(SEXP LRSEXP, SEXP drop_extinctSEXP, SEXP ageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type LR(LRSEXP);
    Rcpp::traits::input_parameter< bool >::type drop_extinct(drop_extinctSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type age(ageSEXP);
    rcpp_result_gen = Rcpp::wrap(Ltable_ed(LR, drop_extinct, age));
    return rcpp_result_gen;
END_RCPP
}
// Ltable_nnd
Rcpp::NumericVector Ltable_nnd(Rcpp::NumericMatrix LR, bool drop_extinct, Rcpp::Nullable<double> age);
RcppExport SEXP _evetiny_Ltable_nnd(SEXP LRSEXP, SEXP drop_extinctSEXP, SEXP ageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type LR(LRSEXP);
    Rcpp::traits::input_parameter< bool >::type drop_extinct(drop_extinctSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type age(ageSEXP);
    rcpp_result_gen = Rcpp::wrap(Ltable_nnd(LR, drop_extinct, age));
    return rcpp_result_gen;
END_RCPP
}
// Ltable_pd
double Ltable_pd(Rcpp::NumericMatrix LR, bool drop_extinct, Rcpp::Nullable<double> age);
RcppExport SEXP _evetiny_Ltable_pd(SEXP LRSEXP, SEXP drop_extinctSEXP, SEXP ageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type LR(LRSEXP);
    Rcpp::traits::input_parameter< bool >::type drop_extinct(drop_extinctSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type age(ageSEXP);
    rcpp_result_gen = Rcpp::wrap(Ltable_pd(LR, drop_extinct, age));
    return rcpp_result_gen;
END_RCPP
}
// Ltable_mpd
double Ltable_mpd(Rcpp::NumericMatrix LR, bool drop_extinct, Rcpp::Nullable<double> age);
RcppExport SEXP _evetiny_Ltable_mpd(SEXP LRSEXP, SEXP drop_extinctSEXP, SEXP ageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type LR(LRSEXP);
    Rcpp::traits::input_parameter< bool >::type drop_extinct(drop_extinctSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type age(ageSEXP);
    rcpp_result_gen = Rcpp::wrap(Ltable_mpd(LR, drop_extinct, age));
    return rcpp_result_gen;
END_RCPP
}
// Ltable_tree
SEXP Ltable_tree(Rcpp::NumericMatrix LR, bool drop_extinct, Rcpp::Nullable<double> age);
RcppExport SEXP _evetiny_Ltable_tree(SEXP LRSEXP, SEXP drop_extinctSEXP, SEXP ageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type LR(LRSEXP);
    Rcpp::traits::input_parameter< bool >::type drop_extinct(drop_extinctSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type age(ageSEXP);
    rcpp_result_gen = Rcpp::wrap(Ltable_tree(LR, drop_extinct, age));
    return rcpp_result_gen;
END_RCPP
}
// Xtree
SEXP Xtree(Rcpp::RObject Robj, bool drop_extinct, Rcpp::Nullable<double> age);
RcppExport SEXP _evetiny_Xtree(SEXP RobjSEXP, SEXP drop_extinctSEXP, SEXP ageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::RObject >::type Robj(RobjSEXP);
    Rcpp::traits::input_parameter< bool >::type drop_extinct(drop_extinctSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type age(ageSEXP);
    rcpp_result_gen = Rcpp::wrap(Xtree(Robj, drop_extinct, age));
    return rcpp_result_gen;
END_RCPP
}
// Xtree_is
bool Xtree_is(Rcpp::RObject Robj);
RcppExport SEXP _evetiny_Xtree_is(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::RObject >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(Xtree_is(Robj));
    return rcpp_result_gen;
END_RCPP
}
// Xtree_tips
int Xtree_tips(Rcpp::RObject Robj);
RcppExport SEXP _evetiny_Xtree_tips(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::RObject >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(Xtree_tips(Robj));
    return rcpp_result_gen;
END_RCPP
}
// Xtree_nnode
int Xtree_nnode(Rcpp::RObject Robj);
RcppExport SEXP _evetiny_Xtree_nnode(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::RObject >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(Xtree_nnode(Robj));
    return rcpp_result_gen;
END_RCPP
}
// Xtree_drop_extinct
SEXP Xtree_drop_extinct(Rcpp::RObject Robj);
RcppExport SEXP _evetiny_Xtree_drop_extinct(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::RObject >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(Xtree_drop_extinct(Robj));
    return rcpp_result_gen;
END_RCPP
}
// Xtree_tip_label
Rcpp::IntegerVector Xtree_tip_label(SEXP Robj);
RcppExport SEXP _evetiny_Xtree_tip_label(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(Xtree_tip_label(Robj));
    return rcpp_result_gen;
END_RCPP
}
// Xtree_phylo
Rcpp::List Xtree_phylo(SEXP Robj);
RcppExport SEXP _evetiny_Xtree_phylo(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(Xtree_phylo(Robj));
    return rcpp_result_gen;
END_RCPP
}
// Xtree_cophenetic
Rcpp::NumericMatrix Xtree_cophenetic(SEXP Robj);
RcppExport SEXP _evetiny_Xtree_cophenetic(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(Xtree_cophenetic(Robj));
    return rcpp_result_gen;
END_RCPP
}
// Xtree_ed
Rcpp::NumericVector Xtree_ed(SEXP Robj);
RcppExport SEXP _evetiny_Xtree_ed(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(Xtree_ed(Robj));
    return rcpp_result_gen;
END_RCPP
}
// Xtree_nnd
Rcpp::NumericVector Xtree_nnd(SEXP Robj);
RcppExport SEXP _evetiny_Xtree_nnd(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(Xtree_nnd(Robj));
    return rcpp_result_gen;
END_RCPP
}
// Xtree_pd
double Xtree_pd(SEXP Robj);
RcppExport SEXP _evetiny_Xtree_pd(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(Xtree_pd(Robj));
    return rcpp_result_gen;
END_RCPP
}
// Xtree_mpd
double Xtree_mpd(SEXP Robj);
RcppExport SEXP _evetiny_Xtree_mpd(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(Xtree_mpd(Robj));
    return rcpp_result_gen;
END_RCPP
}
// SimTable
SEXP SimTable(Rcpp::Nullable<Rcpp::RObject> Rrhs);
RcppExport SEXP _evetiny_SimTable(SEXP RrhsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::RObject> >::type Rrhs(RrhsSEXP);
    rcpp_result_gen = Rcpp::wrap(SimTable(Rrhs));
    return rcpp_result_gen;
END_RCPP
}
// SimTable_is
bool SimTable_is(Rcpp::RObject Robj);
RcppExport SEXP _evetiny_SimTable_is(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::RObject >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(SimTable_is(Robj));
    return rcpp_result_gen;
END_RCPP
}
// SimTable_age
double SimTable_age(Rcpp::RObject Robj);
RcppExport SEXP _evetiny_SimTable_age(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::RObject >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(SimTable_age(Robj));
    return rcpp_result_gen;
END_RCPP
}
// SimTable_nspecie
int SimTable_nspecie(Rcpp::RObject Robj);
RcppExport SEXP _evetiny_SimTable_nspecie(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::RObject >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(SimTable_nspecie(Robj));
    return rcpp_result_gen;
END_RCPP
}
// SimTable_nclade_specie
Rcpp::IntegerVector SimTable_nclade_specie(Rcpp::RObject Robj);
RcppExport SEXP _evetiny_SimTable_nclade_specie(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::RObject >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(SimTable_nclade_specie(Robj));
    return rcpp_result_gen;
END_RCPP
}
// SimTable_size
int SimTable_size(Rcpp::RObject Robj);
RcppExport SEXP _evetiny_SimTable_size(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::RObject >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(SimTable_size(Robj));
    return rcpp_result_gen;
END_RCPP
}
// SimTable_ltable
Rcpp::NumericMatrix SimTable_ltable(SEXP Robj);
RcppExport SEXP _evetiny_SimTable_ltable(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(SimTable_ltable(Robj));
    return rcpp_result_gen;
END_RCPP
}
// SimTable_phylo
Rcpp::List SimTable_phylo(SEXP Robj, bool drop_extinct);
RcppExport SEXP _evetiny_SimTable_phylo(SEXP RobjSEXP, SEXP drop_extinctSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type Robj(RobjSEXP);
    Rcpp::traits::input_parameter< bool >::type drop_extinct(drop_extinctSEXP);
    rcpp_result_gen = Rcpp::wrap(SimTable_phylo(Robj, drop_extinct));
    return rcpp_result_gen;
END_RCPP
}
// SimTable_tree
SEXP SimTable_tree(SEXP Robj, bool drop_extinct);
RcppExport SEXP _evetiny_SimTable_tree(SEXP RobjSEXP, SEXP drop_extinctSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type Robj(RobjSEXP);
    Rcpp::traits::input_parameter< bool >::type drop_extinct(drop_extinctSEXP);
    rcpp_result_gen = Rcpp::wrap(SimTable_tree(Robj, drop_extinct));
    return rcpp_result_gen;
END_RCPP
}
// SimTable_speciation
Rcpp::IntegerVector SimTable_speciation(SEXP Robj, int specie, double t);
RcppExport SEXP _evetiny_SimTable_speciation(SEXP RobjSEXP, SEXP specieSEXP, SEXP tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type Robj(RobjSEXP);
    Rcpp::traits::input_parameter< int >::type specie(specieSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    rcpp_result_gen = Rcpp::wrap(SimTable_speciation(Robj, specie, t));
    return rcpp_result_gen;
END_RCPP
}
// SimTable_extinction
Rcpp::IntegerVector SimTable_extinction(SEXP Robj, int specie, double t);
RcppExport SEXP _evetiny_SimTable_extinction(SEXP RobjSEXP, SEXP specieSEXP, SEXP tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type Robj(RobjSEXP);
    Rcpp::traits::input_parameter< int >::type specie(specieSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    rcpp_result_gen = Rcpp::wrap(SimTable_extinction(Robj, specie, t));
    return rcpp_result_gen;
END_RCPP
}
// SimTable_tip_label
Rcpp::IntegerVector SimTable_tip_label(SEXP Robj, bool drop_extinct);
RcppExport SEXP _evetiny_SimTable_tip_label(SEXP RobjSEXP, SEXP drop_extinctSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type Robj(RobjSEXP);
    Rcpp::traits::input_parameter< bool >::type drop_extinct(drop_extinctSEXP);
    rcpp_result_gen = Rcpp::wrap(SimTable_tip_label(Robj, drop_extinct));
    return rcpp_result_gen;
END_RCPP
}
// SimTable_cophenetic
Rcpp::NumericMatrix SimTable_cophenetic(SEXP Robj);
RcppExport SEXP _evetiny_SimTable_cophenetic(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(SimTable_cophenetic(Robj));
    return rcpp_result_gen;
END_RCPP
}
// SimTable_ed
Rcpp::NumericVector SimTable_ed(SEXP Robj);
RcppExport SEXP _evetiny_SimTable_ed(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(SimTable_ed(Robj));
    return rcpp_result_gen;
END_RCPP
}
// SimTable_nnd
Rcpp::NumericVector SimTable_nnd(SEXP Robj);
RcppExport SEXP _evetiny_SimTable_nnd(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(SimTable_nnd(Robj));
    return rcpp_result_gen;
END_RCPP
}
// SimTable_pd
double SimTable_pd(SEXP Robj);
RcppExport SEXP _evetiny_SimTable_pd(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(SimTable_pd(Robj));
    return rcpp_result_gen;
END_RCPP
}
// SimTable_mpd
double SimTable_mpd(SEXP Robj);
RcppExport SEXP _evetiny_SimTable_mpd(SEXP RobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type Robj(RobjSEXP);
    rcpp_result_gen = Rcpp::wrap(SimTable_mpd(Robj));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_evetiny_Ltable_phylo", (DL_FUNC) &_evetiny_Ltable_phylo, 3},
    {"_evetiny_Ltable_prune", (DL_FUNC) &_evetiny_Ltable_prune, 2},
    {"_evetiny_Ltable_legacy_ascending", (DL_FUNC) &_evetiny_Ltable_legacy_ascending, 2},
    {"_evetiny_Ltable_legacy_descending", (DL_FUNC) &_evetiny_Ltable_legacy_descending, 2},
    {"_evetiny_Ltable_cophenetic", (DL_FUNC) &_evetiny_Ltable_cophenetic, 3},
    {"_evetiny_Ltable_ed", (DL_FUNC) &_evetiny_Ltable_ed, 3},
    {"_evetiny_Ltable_nnd", (DL_FUNC) &_evetiny_Ltable_nnd, 3},
    {"_evetiny_Ltable_pd", (DL_FUNC) &_evetiny_Ltable_pd, 3},
    {"_evetiny_Ltable_mpd", (DL_FUNC) &_evetiny_Ltable_mpd, 3},
    {"_evetiny_Ltable_tree", (DL_FUNC) &_evetiny_Ltable_tree, 3},
    {"_evetiny_Xtree", (DL_FUNC) &_evetiny_Xtree, 3},
    {"_evetiny_Xtree_is", (DL_FUNC) &_evetiny_Xtree_is, 1},
    {"_evetiny_Xtree_tips", (DL_FUNC) &_evetiny_Xtree_tips, 1},
    {"_evetiny_Xtree_nnode", (DL_FUNC) &_evetiny_Xtree_nnode, 1},
    {"_evetiny_Xtree_drop_extinct", (DL_FUNC) &_evetiny_Xtree_drop_extinct, 1},
    {"_evetiny_Xtree_tip_label", (DL_FUNC) &_evetiny_Xtree_tip_label, 1},
    {"_evetiny_Xtree_phylo", (DL_FUNC) &_evetiny_Xtree_phylo, 1},
    {"_evetiny_Xtree_cophenetic", (DL_FUNC) &_evetiny_Xtree_cophenetic, 1},
    {"_evetiny_Xtree_ed", (DL_FUNC) &_evetiny_Xtree_ed, 1},
    {"_evetiny_Xtree_nnd", (DL_FUNC) &_evetiny_Xtree_nnd, 1},
    {"_evetiny_Xtree_pd", (DL_FUNC) &_evetiny_Xtree_pd, 1},
    {"_evetiny_Xtree_mpd", (DL_FUNC) &_evetiny_Xtree_mpd, 1},
    {"_evetiny_SimTable", (DL_FUNC) &_evetiny_SimTable, 1},
    {"_evetiny_SimTable_is", (DL_FUNC) &_evetiny_SimTable_is, 1},
    {"_evetiny_SimTable_age", (DL_FUNC) &_evetiny_SimTable_age, 1},
    {"_evetiny_SimTable_nspecie", (DL_FUNC) &_evetiny_SimTable_nspecie, 1},
    {"_evetiny_SimTable_nclade_specie", (DL_FUNC) &_evetiny_SimTable_nclade_specie, 1},
    {"_evetiny_SimTable_size", (DL_FUNC) &_evetiny_SimTable_size, 1},
    {"_evetiny_SimTable_ltable", (DL_FUNC) &_evetiny_SimTable_ltable, 1},
    {"_evetiny_SimTable_phylo", (DL_FUNC) &_evetiny_SimTable_phylo, 2},
    {"_evetiny_SimTable_tree", (DL_FUNC) &_evetiny_SimTable_tree, 2},
    {"_evetiny_SimTable_speciation", (DL_FUNC) &_evetiny_SimTable_speciation, 3},
    {"_evetiny_SimTable_extinction", (DL_FUNC) &_evetiny_SimTable_extinction, 3},
    {"_evetiny_SimTable_tip_label", (DL_FUNC) &_evetiny_SimTable_tip_label, 2},
    {"_evetiny_SimTable_cophenetic", (DL_FUNC) &_evetiny_SimTable_cophenetic, 1},
    {"_evetiny_SimTable_ed", (DL_FUNC) &_evetiny_SimTable_ed, 1},
    {"_evetiny_SimTable_nnd", (DL_FUNC) &_evetiny_SimTable_nnd, 1},
    {"_evetiny_SimTable_pd", (DL_FUNC) &_evetiny_SimTable_pd, 1},
    {"_evetiny_SimTable_mpd", (DL_FUNC) &_evetiny_SimTable_mpd, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_evetiny(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
